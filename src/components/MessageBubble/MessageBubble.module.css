/* src/components/MessageBubble/MessageBubble.module.css (再次修改) */

/* --- General Layout --- */
.bubbleContainer {
  display: flex;
  gap: 8px;
  max-width: 85%;
  align-items: flex-start;
  margin-bottom: 12px;
}

.userContainer {
  justify-content: flex-end;
  margin-left: auto;
}

.aiContainer {
  justify-content: flex-start;
  margin-right: auto;
}

/* --- Avatar --- */
.avatar {
  flex-shrink: 0;
  margin-top: 2px;
}

.userContainer .avatar {
  order: 2;
}

/* --- Message Content Wrapper --- */
.messageContentWrapper {
  display: flex;
  flex-direction: column;
  flex-shrink: 1;
  min-width: 0;
}

.userContainer .messageContentWrapper {
  order: 1;
  align-items: flex-end;
}

.aiContainer .messageContentWrapper {
  align-items: flex-start;
}

/* --- Bubble Styling --- */
.bubble {
  padding: 8px 12px;
  border-radius: 12px;
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
  position: relative;
  font-size: 0.95rem;
  /* Base line-height for text within the bubble */
  line-height: 1.5; /* <-- Base line height, looks reasonable */
  max-width: 100%;
}

.userBubble {
  background-color: #007bff;
  color: white;
  border-bottom-right-radius: 4px;
}

.aiBubble {
  background-color: #ffffff;
  color: #333;
  border: 1px solid #e8e8e8;
  border-bottom-left-radius: 4px;
}

/* --- Timestamp --- */
.timestamp {
  font-size: 0.75em;
  color: #888;
  margin-top: 4px;
  padding: 0 5px;
}

/* --- Loading/Error States --- */
.loadingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 24px;
  padding: 5px 0;
}

.errorAlert {
  font-size: 0.9em !important;
  padding: 8px 12px !important;
  margin: -2px 0;
}
.errorAlert :global(.ant-alert-message) {
  margin-bottom: 4px !important;
  font-weight: 500;
}
.errorAlert :global(.ant-alert-description) {
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: pre-wrap;
  font-size: 0.95em;
  line-height: 1.4;
}

/* ================================================== */
/* --- Markdown Rendering - Aggressive Spacing Control --- */
/* ================================================== */

/* Container: Use flex, but set GAP TO ZERO or very small */
.markdownContent,
.parsedContentContainer {
  display: flex;
  flex-direction: column;
  gap: 0; /* <-- SET GAP TO ZERO. We will control spacing with margins */
  overflow-wrap: break-word;
  word-wrap: break-word;
  white-space: pre-wrap;
  padding: 0;
  margin: 0;
}

/* --- TARGET ALL COMMON MARKDOWN ELEMENTS --- */
/* Reset margins first, then add back controlled bottom margin */
.markdownContent > *,
.parsedContentContainer > * {
  margin-top: 0;
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 0; /* Default reset */
  padding: 0; /* Reset padding too */
}

/* --- Add back CONTROLLED bottom margins for spacing --- */

/* Paragraphs: Add small space after a paragraph */
.markdownContent p,
.parsedContentContainer p,
.markdownParagraph {
  margin-bottom: 0.1em; /* <-- ADJUST space AFTER paragraphs */
  line-height: inherit; /* Inherit base line-height */
}

/* Lists (ul, ol): Add space before/after the whole list block */
.markdownContent ul,
.markdownContent ol,
.parsedContentContainer ul,
.parsedContentContainer ol {
  margin-bottom: 0.2em; /* <-- ADJUST space AFTER list blocks */
  padding-left: 1.8em; /* Standard indentation */
}
/* Ensure lists nested inside lists have less margin */
.markdownContent ul ul,
.markdownContent ul ol,
.markdownContent ol ul,
.markdownContent ol ol,
.parsedContentContainer ul ul,
.parsedContentContainer ul ol,
.parsedContentContainer ol ul,
.parsedContentContainer ol ol {
  margin-bottom: 0.2em; /* Less space for nested lists */
}

/* List Items (li): Control spacing BETWEEN list items */
.markdownContent li,
.parsedContentContainer li {
  margin-bottom: 0.1em; /* <-- ADJUST space BETWEEN list items */
}
/* Ensure paragraphs inside list items have NO bottom margin */
.markdownContent li > p,
.parsedContentContainer li > p {
  margin-bottom: 0;
}
/* Direct text content within li should follow bubble line-height */
.markdownContent li,
.parsedContentContainer li {
  line-height: inherit;
}

/* Headings (h1-h6): More space above, less below */
.markdownContent h1,
.markdownContent h2,
.markdownContent h3,
.markdownContent h4,
.markdownContent h5,
.markdownContent h6,
.parsedContentContainer h1,
.parsedContentContainer h2,
.parsedContentContainer h3,
.parsedContentContainer h4,
.parsedContentContainer h5,
.parsedContentContainer h6 {
  margin-top: 0.6em; /* Space before heading */
  margin-bottom: 0.2em; /* Space after heading */
  line-height: 1.3;
}

/* Blockquotes: Space before/after blockquote */
.markdownContent blockquote,
.parsedContentContainer blockquote {
  margin-top: 0.5em;
  margin-bottom: 0.5em; /* <-- ADJUST space AFTER blockquotes */
  padding: 0.2em 0.8em;
  border-left: 3px solid #ccc;
  color: #666;
}
/* Remove margin for paragraphs inside blockquotes */
.markdownContent blockquote p,
.parsedContentContainer blockquote p {
  margin-bottom: 0;
}

/* Code Blocks (via CustomCodeBlock): Control spacing around it */
/* Use :global() because CustomCodeBlock is a separate component */
:global(.codeBlockContainer) {
  margin-top: 0.5em !important; /* Space before code block */
  margin-bottom: 0.5em !important; /* Space after code block */
}

/* --- Inline Elements --- */
.inlineCode {
  background-color: rgba(135, 131, 120, 0.15);
  color: #eb5757;
  padding: 0.1em 0.3em;
  border-radius: 4px;
  font-size: 0.9em;
  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier,
    monospace;
  vertical-align: baseline;
}

.userBubble .markdownLink {
  color: #add8e6;
  text-decoration: underline;
}
.userBubble .markdownLink:hover {
  color: #ffffff;
}

.aiBubble .markdownLink {
  color: #0056b3;
  text-decoration: underline;
}
.aiBubble .markdownLink:hover {
  color: #003f7e;
}

/* --- Styles for the <think> block --- */
.thinkingBlock {
  background-color: transparent !important;
  margin: 0 !important; /* Should have no margin itself */
  border: none !important;
}

.thinkingBlock :global(.ant-collapse-item) {
  border-bottom: none !important;
}

.thinkingBlock :global(.ant-collapse-header) {
  padding: 4px 8px !important;
  background-color: #f5f5f5 !important;
  border-radius: 4px !important;
  font-size: 0.85em !important;
  color: #555 !important;
  line-height: normal !important;
  min-height: unset !important;
  align-items: center !important;
}

.thinkingBlock :global(.ant-collapse-arrow) {
  font-size: 0.8em !important;
}

.thinkingBlock :global(.ant-collapse-content) {
  border: none !important;
  background-color: transparent !important;
  padding: 0 !important;
  overflow: hidden !important;
}

.thinkingBlock :global(.ant-collapse-content-box) {
  padding: 8px 8px 8px 12px !important;
  border-left: 3px solid #d9d9d9;
  margin-top: 4px;
  background-color: #fafafa;
  border-radius: 0 0 4px 4px;
}

/* Apply similar AGGRESSIVE spacing rules INSIDE the thinking block */
.thinkingBlock :global(.ant-collapse-content-box) .markdownContent,
.thinkingBlock :global(.ant-collapse-content-box) .parsedContentContainer {
  font-size: 0.9em;
  color: #666;
  gap: 0; /* NO GAP inside think block either */
}
.thinkingBlock :global(.ant-collapse-content-box) > * {
  margin: 0 0 0.3em 0; /* Reset and add small bottom margin for elements inside think box */
  padding: 0;
}
.thinkingBlock :global(.ant-collapse-content-box) p {
  margin-bottom: 0.3em; /* Space after paragraphs inside */
  line-height: 1.4;
}
.thinkingBlock :global(.ant-collapse-content-box) ul,
.thinkingBlock :global(.ant-collapse-content-box) ol {
  margin-bottom: 0.4em; /* Space after lists inside */
  padding-left: 1.5em;
}
.thinkingBlock :global(.ant-collapse-content-box) li {
  margin-bottom: 0.15em; /* Space between list items inside */
}
.thinkingBlock :global(.ant-collapse-content-box) li > p {
  margin-bottom: 0; /* No margin for paragraphs in list items inside */
}

/* Make sure last element in any container has no bottom margin */
.markdownContent > *:last-child,
.parsedContentContainer > *:last-child,
.thinkingBlock :global(.ant-collapse-content-box) > *:last-child {
  margin-bottom: 0 !important;
}
